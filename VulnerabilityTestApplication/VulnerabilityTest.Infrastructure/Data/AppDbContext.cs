using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;
using VulnerabilityTest.Domain.Entities;

namespace VulnerabilityTest.Infrastructure.Data
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options)
        {


        }

        public DbSet<User> Users => Set<User>();
        public DbSet<VulnerabilityScan> VulnerabilityScans => Set<VulnerabilityScan>();


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            // Add your model configurations here

            modelBuilder.Entity<User>()
                .HasKey(u => u.Id);

            modelBuilder.Entity<VulnerabilityScan>()
                .HasKey(v => v.Id);

            modelBuilder.Entity<User>()
                .HasMany(u => u.VulnerabilityScans)
                .WithOne(v => v.User)
                .HasForeignKey(v => v.UserId)
                .OnDelete(DeleteBehavior.Cascade);
        }
    }
}
