services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: VulnTestDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Enes.123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MESSAGE_MAX_BYTES: 1200000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1200000000
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list"]
      interval: 45s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  api:
    build:
      context: ./VulnerabilityTestApplication
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=VulnTestDb;Username=postgres;Password=Enes.123
      - Kafka__BootstrapServers=kafka:29092
    secrets:
      - api_secret
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  notifier:
    build:
      context: ./VulnerabilityTestApplication
      dockerfile: Dockerfile.notifier
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Kafka__BootstrapServers=kafka:29092
    secrets:
      - notifier_secret
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    build:
      context: ./www.vulnerabilityscan.com
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - api

volumes:
  postgres_data:

secrets:
  api_secret:
    file: ./api_secrets.json
  notifier_secret:
    file: ./notifier_secrets.json