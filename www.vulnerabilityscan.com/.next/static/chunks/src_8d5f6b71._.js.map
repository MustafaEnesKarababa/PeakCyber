{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nskar/OneDrive/Masa%C3%BCst%C3%BC/PeakCyber/VulnerabilityTestWebSite/www.vulnerabilityscan.com/src/api/scans.ts"],"sourcesContent":["const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL || 'https://localhost:7095/api';\r\nimport {getToken} from './token';\r\n\r\nexport async function startScan(targetUrl : string) {\r\n  const token = getToken();\r\n\r\n  if(!token) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Vulnerability/start-scan`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ TargetUrl : targetUrl})\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error( await response.text() || 'Failed to start scan');\r\n  }\r\n\r\n  return response.json();\r\n\r\n}\r\n\r\n\r\n\r\nexport async function getScan (id : number){\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Vulnerability/get-scan/${id}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get scan');\r\n  }\r\n\r\n  return response.json();\r\n\r\n}\r\n\r\nexport async function getScans() {\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Vulnerability/get-scans`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get scans');\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\nexport async function getAllScans(){\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Admin/get-all-scans`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n      \r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get all scans');\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n\r\n  \r\n"],"names":[],"mappings":";;;;;;AAAiB;AACjB;AADA,MAAM,WAAW,kEAAwC;;AAGlD,eAAe,UAAU,SAAkB;IAChD,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IAErB,IAAG,CAAC,OAAO;QACT,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,8BAA4B;QACnE,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE,WAAY;QAAS;IAC9C;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAO,MAAM,SAAS,IAAI,MAAM;IAC5C;IAEA,OAAO,SAAS,IAAI;AAEtB;AAIO,eAAe,QAAS,EAAW;IACxC,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAqC,OAAnC,UAAS,4BAA6B,OAAH,KAAM;QACvE,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AAEtB;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,6BAA2B;QAClE,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,yBAAuB;QAC9D,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAElB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nskar/OneDrive/Masa%C3%BCst%C3%BC/PeakCyber/VulnerabilityTestWebSite/www.vulnerabilityscan.com/src/realtime/scanHub.ts"],"sourcesContent":["import * as signalR from \"@microsoft/signalr\"\r\nimport { getToken } from \"@/api/token\"\r\n\r\nconst API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:7095/api\"\r\n\r\nconst HUB_URL = API_BASE.replace(/\\/api\\/?/,'') + '/hubs/scanHub'\r\n\r\nexport function createScanHubConnection() {\r\n  return new signalR.HubConnectionBuilder()\r\n                        .withUrl(HUB_URL, {\r\n                          accessTokenFactory: () => getToken() || ''\r\n                        })\r\n                        .withAutomaticReconnect()\r\n                        .configureLogging(signalR.LogLevel.Information)\r\n                        .build()\r\n}"],"names":[],"mappings":";;;AAGiB;AAHjB;AAAA;AACA;;;AAEA,MAAM,WAAW,kEAAwC;AAEzD,MAAM,UAAU,SAAS,OAAO,CAAC,YAAW,MAAM;AAE3C,SAAS;IACd,OAAO,IAAI,gLAAA,CAAA,uBAA4B,GAChB,OAAO,CAAC,SAAS;QAChB,oBAAoB,IAAM,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD,OAAO;IAC1C,GACC,sBAAsB,GACtB,gBAAgB,CAAC,mKAAA,CAAA,WAAgB,CAAC,WAAW,EAC7C,KAAK;AAC9B","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nskar/OneDrive/Masa%C3%BCst%C3%BC/PeakCyber/VulnerabilityTestWebSite/www.vulnerabilityscan.com/src/realtime/opId.ts"],"sourcesContent":["// src/realtime/opId.ts\r\n// userId + \":\" + targetUrl → SHA-256 → ilk 16 byte → .NET Guid formatı\r\nexport async function makeOperationId(userId: string, targetUrl: string): Promise<string> {\r\n  const payload = `${userId}:${targetUrl.trim()}`;\r\n  const data = new TextEncoder().encode(payload);\r\n  const hashBuf = await crypto.subtle.digest(\"SHA-256\", data);\r\n  const h = new Uint8Array(hashBuf).subarray(0, 16);\r\n\r\n  const dv = new DataView(h.buffer, h.byteOffset, h.byteLength);\r\n  const hex2 = (n: number) => n.toString(16).padStart(2, \"0\");\r\n  const part1 = dv.getUint32(0, true).toString(16).padStart(8, \"0\");\r\n  const part2 = dv.getUint16(4, true).toString(16).padStart(4, \"0\");\r\n  const part3 = dv.getUint16(6, true).toString(16).padStart(4, \"0\");\r\n  const part4 = hex2(h[8]) + hex2(h[9]);\r\n  const part5 = hex2(h[10]) + hex2(h[11]) + hex2(h[12]) + hex2(h[13]) + hex2(h[14]) + hex2(h[15]);\r\n  return `${part1}-${part2}-${part3}-${part4}-${part5}`;\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,uEAAuE;;;;AAChE,eAAe,gBAAgB,MAAc,EAAE,SAAiB;IACrE,MAAM,UAAU,AAAC,GAAY,OAAV,QAAO,KAAoB,OAAjB,UAAU,IAAI;IAC3C,MAAM,OAAO,IAAI,cAAc,MAAM,CAAC;IACtC,MAAM,UAAU,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW;IACtD,MAAM,IAAI,IAAI,WAAW,SAAS,QAAQ,CAAC,GAAG;IAE9C,MAAM,KAAK,IAAI,SAAS,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,UAAU;IAC5D,MAAM,OAAO,CAAC,IAAc,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;IACvD,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;IAC7D,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;IAC7D,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;IAC7D,MAAM,QAAQ,KAAK,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE;IACpC,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG;IAC9F,OAAO,AAAC,GAAW,OAAT,OAAM,KAAY,OAAT,OAAM,KAAY,OAAT,OAAM,KAAY,OAAT,OAAM,KAAS,OAAN;AAChD","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nskar/OneDrive/Masa%C3%BCst%C3%BC/PeakCyber/VulnerabilityTestWebSite/www.vulnerabilityscan.com/src/app/dashboard/start-scan/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { startScan, getScan } from \"@/api/scans\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport { createScanHubConnection } from \"@/realtime/scanHub\";\r\nimport { getToken } from \"@/api/token\";\r\nimport { makeOperationId } from \"@/realtime/opId\";\r\n\r\n// JWT'den userId (sub/nameidentifier) al\r\nfunction getUserIdFromJwt(): string | null {\r\n  const t = getToken();\r\n  if (!t) return null;\r\n  try {\r\n    const payload = JSON.parse(atob(t.split(\".\")[1]));\r\n    return String(\r\n      payload.sub ||\r\n        payload.nameid ||\r\n        payload[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"] ||\r\n        \"\"\r\n    );\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\ntype LogRow = { at?: string; text: string };\r\n\r\nexport default function StartScanPage() {\r\n  const [targetUrl, setTargetUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const [scanId, setScanId] = useState<number | null>(null);\r\n  const [scanResult, setScanResult] = useState<any | null>(null);\r\n\r\n  const [logs, setLogs] = useState<LogRow[]>([]);\r\n  const addLog = (row: LogRow | string) =>\r\n    setLogs((p) => [...p, typeof row === \"string\" ? { text: row } : row]);\r\n\r\n  const connectionRef = useRef<signalR.HubConnection | null>(null);\r\n  const scanIdRef = useRef<number | null>(null);\r\n  useEffect(() => { scanIdRef.current = scanId; }, [scanId]);\r\n\r\n  // SignalR bağlan + eventleri UI'ye yaz\r\n  useEffect(() => {\r\n    const conn = createScanHubConnection();\r\n\r\n    conn.on(\"Stage\", (p: any) => {\r\n      // p: { operationId, step, message, at }\r\n      addLog({ at: p?.at, text: p?.message ?? `Stage: ${p?.step ?? \"-\"}` });\r\n    });\r\n\r\n    conn.on(\"Completed\", async (p: any) => {\r\n      // p: { operationId, scanId, message, at }\r\n      addLog({ at: p?.at, text: p?.message ?? \"Completed.\" });\r\n      const sid = Number(p?.scanId ?? scanIdRef.current);\r\n      if (sid) {\r\n        setScanId(sid);\r\n        try {\r\n          const data = await getScan(sid);\r\n          setScanResult(data);\r\n        } catch (e: any) {\r\n          setError(e.message || \"Failed to fetch scan result\");\r\n        }\r\n      }\r\n    });\r\n\r\n    conn.on(\"Failed\", (p: any) => {\r\n      // p: { operationId, error, at }\r\n      addLog({ at: p?.at, text: `Failed: ${p?.error || \"Unknown error\"}` });\r\n      setError(p?.error || \"Scan failed\");\r\n    });\r\n\r\n    conn\r\n      .start()\r\n      .then(() => addLog(`Realtime connected (id=${conn.connectionId || \"-\"})`))\r\n      .catch((e) => addLog(`Realtime connect error: ${e?.message || e}`));\r\n\r\n    connectionRef.current = conn;\r\n\r\n    return () => {\r\n      conn.off(\"Stage\");\r\n      conn.off(\"Completed\");\r\n      conn.off(\"Failed\");\r\n      conn.stop().catch(() => {});\r\n      connectionRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setScanResult(null);\r\n    setScanId(null);\r\n    setLogs([]);\r\n\r\n    if (!targetUrl.trim()) {\r\n      setError(\"Please enter a target URL\");\r\n      return;\r\n    }\r\n\r\n    // 1) userId + targetUrl → operationId\r\n    const userId = getUserIdFromJwt();\r\n    if (!userId) {\r\n      setError(\"Unauthorized\");\r\n      return;\r\n    }\r\n\r\n    let operationId: string;\r\n    try {\r\n      operationId = await makeOperationId(userId, targetUrl);\r\n      addLog(`operationId = ${operationId}`);\r\n    } catch {\r\n      setError(\"Failed to create operation id\");\r\n      return;\r\n    }\r\n\r\n    // 2) gruba katıl\r\n    const conn = connectionRef.current;\r\n    if (!conn) {\r\n      setError(\"Realtime connection not ready\");\r\n      return;\r\n    }\r\n    if (conn.state !== signalR.HubConnectionState.Connected) {\r\n      try {\r\n        await conn.start();\r\n      } catch (err: any) {\r\n        setError(err?.message || \"Realtime connection failed\");\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      await conn.invoke(\"JoinGroup\", operationId);\r\n      addLog(\"Joined realtime group.\");\r\n    } catch (err: any) {\r\n      setError(err?.message || \"Failed to join realtime group\");\r\n      return;\r\n    }\r\n\r\n    // 3) start-scan (Completed event gelince sonucu çekeceğiz)\r\n    setLoading(true);\r\n    try {\r\n      const result = await startScan(targetUrl.trim());\r\n      // Backend sync bir ScanId dönerse göstermek faydalı:\r\n      const sid = Number(result?.scanId ?? result?.ScanId);\r\n      if (sid) {\r\n        setScanId(sid);\r\n        addLog(`Start accepted. scanId=${sid}`);\r\n      } else {\r\n        addLog(\"Start accepted.\");\r\n      }\r\n    } catch (err: any) {\r\n      setError(err?.message || \"Failed to start scan\");\r\n      addLog(`Start error: ${err?.message || err}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderLogs = () => {\r\n    if (logs.length === 0) return null;\r\n    return (\r\n      <div className=\"mt-6\">\r\n        <div className=\"font-medium mb-1\">Live Logs</div>\r\n        <pre\r\n          className=\"\r\n            text-xs bg-gray-900 text-gray-100 rounded p-3\r\n            whitespace-pre-wrap break-words [overflow-wrap:anywhere]\r\n            max-w-full max-h-60 overflow-auto\r\n          \"\r\n        >\r\n          {logs\r\n            .map((l) => (l.at ? `[${new Date(l.at).toLocaleTimeString()}] ${l.text}` : l.text))\r\n            .join(\"\\n\")}\r\n        </pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-xl font-semibold mb-4\">Start Scan</h1>\r\n\r\n      <form className=\"max-w-xl space-y-3\" onSubmit={onSubmit}>\r\n        <input\r\n          type=\"url\"\r\n          placeholder=\"Enter target URL\"\r\n          className=\"w-full border rounded p-2\"\r\n          value={targetUrl}\r\n          onChange={(e) => setTargetUrl(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"text-red-600 text-sm whitespace-pre-wrap\">{error}</p>}\r\n\r\n        <button className=\"rounded px-4 py-2 border\" disabled={loading || !targetUrl}>\r\n          {loading ? \"Starting...\" : \"Start Scan\"}\r\n        </button>\r\n      </form>\r\n\r\n      {renderLogs()}\r\n\r\n      {scanId !== null && (\r\n        <div className=\"mt-6 p-3 border rounded w-full \">\r\n          <div className=\"font-medium\">Scan ID: {scanId}</div>\r\n          {scanResult ? (\r\n            <pre\r\n              className=\"\r\n              text-xs text-gray-100 rounded p-3\r\n              whitespace-pre-wrap break-words [overflow-wrap:anywhere]\r\n              max-w-full max-h-96 overflow-auto\"\r\n            >\r\n              Target URL : {scanResult.targetUrl}\r\n              <br />\r\n              Scan Date : {new Date(scanResult.scanDate).toLocaleString()}\r\n              <br />\r\n              <br />\r\n              <br />\r\n              Scan Result :{\" \"}\r\n              {(() => {\r\n                try {\r\n                  const raw =\r\n                    scanResult.scanResult ??\r\n                    scanResult.scanresult ??\r\n                    scanResult.Scanresult;\r\n                  const val = typeof raw === \"string\" ? JSON.parse(raw) : raw;\r\n                  return JSON.stringify(val, null, 2);\r\n                } catch {\r\n                  return String(\r\n                    scanResult.scanResult ??\r\n                      scanResult.scanresult ??\r\n                      scanResult.Scanresult ??\r\n                      \"\"\r\n                  );\r\n                }\r\n              })()}\r\n            </pre>\r\n          ) : (\r\n            <p className=\"text-sm opacity-80 mt-2\">No scan results available.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}