{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/src/api/scans.ts"],"sourcesContent":["const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL || 'https://localhost:7095/api';\r\nimport {getToken} from './token'\r\n\r\ntype StartScanApiResponse = {\r\n  RunId?: string; runId?: string;\r\n  ScanId?: number; scanId?: number;\r\n};\r\n\r\nexport async function startScan(targetUrl: string, runId: string) {\r\n  const token = getToken()\r\n\r\n  if (!token) \r\n    {\r\n      throw new Error(\"Unauthorized\")\r\n    }\r\n\r\n  const res = await fetch(`${API_BASE}/Vulnerability/start-scan`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n   \r\n    body: JSON.stringify({ TargetUrl: targetUrl, OperationId: runId }),\r\n  });\r\n\r\n  if (!res.ok) \r\n    throw new Error((await res.text()) || \"Failed to start scan\")\r\n\r\n  const data: StartScanApiResponse = await res.json()\r\n\r\n  const RunId = data.RunId ?? data.runId ?? runId\r\n\r\n  const ScanId = data.ScanId ?? data.scanId ?? null\r\n\r\n  return { RunId, ScanId }\r\n}\r\n\r\n\r\n\r\nexport async function getScan (id : number){\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Vulnerability/get-scan/${id}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get scan');\r\n  }\r\n\r\n  return response.json();\r\n\r\n}\r\n\r\nexport async function getScans() {\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Vulnerability/get-scans`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get scans');\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\nexport async function getAllScans(){\r\n  const token = getToken();\r\n  if(!token){\r\n    throw new Error('Unauthorized');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE}/Admin/get-all-scans`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n      \r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.text() || 'Failed to get all scans');\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n\r\n  \r\n"],"names":[],"mappings":";;;;;;AAAiB;AACjB;AADA,MAAM,WAAW,iEAAwC;;AAQlD,eAAe,UAAU,SAAiB,EAAE,KAAa;IAC9D,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IAErB,IAAI,CAAC,OACH;QACE,MAAM,IAAI,MAAM;IAClB;IAEF,MAAM,MAAM,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,8BAA4B;QAC9D,QAAQ;QACR,SAAS;YACP,eAAe,AAAC,UAAe,OAAN;YACzB,gBAAgB;QAClB;QAEA,MAAM,KAAK,SAAS,CAAC;YAAE,WAAW;YAAW,aAAa;QAAM;IAClE;IAEA,IAAI,CAAC,IAAI,EAAE,EACT,MAAM,IAAI,MAAM,AAAC,MAAM,IAAI,IAAI,MAAO;IAExC,MAAM,OAA6B,MAAM,IAAI,IAAI;QAEnC,aAAA;IAAd,MAAM,QAAQ,CAAA,OAAA,CAAA,cAAA,KAAK,KAAK,cAAV,yBAAA,cAAc,KAAK,KAAK,cAAxB,kBAAA,OAA4B;QAE3B,cAAA;IAAf,MAAM,SAAS,CAAA,QAAA,CAAA,eAAA,KAAK,MAAM,cAAX,0BAAA,eAAe,KAAK,MAAM,cAA1B,mBAAA,QAA8B;IAE7C,OAAO;QAAE;QAAO;IAAO;AACzB;AAIO,eAAe,QAAS,EAAW;IACxC,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAqC,OAAnC,UAAS,4BAA6B,OAAH,KAAM;QACvE,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AAEtB;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,6BAA2B;QAClE,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;IACrB,IAAG,CAAC,OAAM;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,yBAAuB;QAC9D,QAAQ;QACR,SAAS;YACP,iBAAiB,AAAC,UAAe,OAAN;YAC3B,gBAAgB;QAElB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,MAAM,SAAS,IAAI,MAAM;IAC3C;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/dashboard/get-all-scans/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getAllScans, getScan } from \"@/api/scans\"\r\n\r\nexport default function ScanHistoryPage() {\r\n  const [scans, setScans] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const [selectedScanId, setSelectedScanId] = useState<number | null>(null)\r\n  const [selectedScanResult, setSelectedScanResult] = useState<any>(null)\r\n  const [loadingResult, setLoadingResult] = useState(false)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const list = await getAllScans(); \r\n        setScans(Array.isArray(list) ? list : []);\r\n      } catch (e: any) {\r\n        setError(e.message || \"Failed to load scans\");\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const onToggleResult = async (scan: any) => {\r\n    const id = Number(scan.id);\r\n    if (selectedScanId === id) {\r\n      setSelectedScanId(null)\r\n      setSelectedScanResult(null)\r\n      return;\r\n    }\r\n\r\n    setSelectedScanId(id)\r\n    setSelectedScanResult(null)\r\n    setError(null)\r\n \r\n    setLoadingResult(true);\r\n    try {\r\n      const full = await getScan(id)\r\n      const raw = full?.scanresult \r\n\r\n      setSelectedScanResult(raw);\r\n    } catch (e: any) {\r\n      setError(e.message || \"Failed to load scan result\")\r\n      setSelectedScanId(null)\r\n      setSelectedScanResult(null)\r\n    } finally {\r\n      setLoadingResult(false)\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <main className=\"min-h-screen grid place-items-center p-6\">\r\n        <p>Loading...</p>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"p-6 min-w-0\">\r\n      <h1 className=\"text-2xl font-semibold mb-4\">Scan History</h1>\r\n\r\n      {error && <p className=\"text-red-600 mb-3\">{error}</p>}\r\n\r\n      {scans.length === 0 ? (\r\n        <p className=\"opacity-80\">No scans found</p>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {scans.map((scan) => {\r\n            const id = Number(scan.id);\r\n            const targetUrl = scan.targetUrl;\r\n            const dateVal = scan.scanDate;\r\n            const userName = scan.userName;\r\n            const userRole = scan.role;\r\n\r\n            const isOpen = selectedScanId === id;\r\n\r\n            return (\r\n              <div key={id} className=\"border rounded p-3 max-w-full\">\r\n                <div className=\"flex item-start justify-between gap-4\">\r\n                  <div className=\"text-sm min-w-0\">\r\n                    <div>\r\n                      <span className=\"opacity-70\">Scan ID :</span>{\" \"}\r\n                      <span className=\"font-mono\">{id}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"opacity-70\">Target URL :</span>{\" \"}\r\n                      <span className=\"break-all [overflow-wrap:anywhere]\">\r\n                        {targetUrl}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"opacity-70\">Scan Date :</span>{\" \"}\r\n                      <span className=\"font-mono\">\r\n                        {dateVal ? new Date(dateVal).toLocaleString() : \"-\"}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"opacity-70\">User Name :</span>{\" \"}\r\n                      <span className=\"font-mono\">{userName}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"opacity-70\">User Role :</span>{\" \"}\r\n                      <span className=\"font-mono\">{userRole}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button\r\n                    className=\"border rounded px-3 py-1 text-sm shrink-0 h-14\"\r\n                    onClick={() => onToggleResult(scan)}\r\n                    disabled={loadingResult && isOpen}\r\n                  >\r\n                    {loadingResult && isOpen\r\n                      ? \"Loading...\"\r\n                      : isOpen\r\n                      ? \"Hide Result\"\r\n                      : \"Show Result\"}\r\n                  </button>\r\n                </div>\r\n\r\n                {isOpen && selectedScanResult && (\r\n                  <div className=\"mt-3\">\r\n                    <div className=\"font-medium mb-1\">Scan Result:</div>\r\n                    <pre\r\n                      className=\"\r\n                        text-xs text-gray-100 rounded p-3\r\n                        whitespace-pre-wrap break-words [overflow-wrap:anywhere]\r\n                        max-w-full max-h-96 overflow-auto \r\n                      \"\r\n                    >\r\n                      {JSON.stringify(JSON.parse(selectedScanResult ?? selectedScanResult), null, 2)}\r\n                    </pre>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}