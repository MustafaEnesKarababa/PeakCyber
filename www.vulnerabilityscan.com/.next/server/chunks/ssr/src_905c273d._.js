module.exports = {

"[project]/src/api/scans.ts [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "getAllScans": ()=>getAllScans,
    "getScan": ()=>getScan,
    "getScans": ()=>getScans,
    "startScan": ()=>startScan
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/token.ts [app-ssr] (ecmascript)");
const API_BASE = ("TURBOPACK compile-time value", "http://localhost:5000/api") || 'https://localhost:7095/api';
;
async function startScan(targetUrl, runId) {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error("Unauthorized");
    }
    const res = await fetch(`${API_BASE}/Vulnerability/start-scan`, {
        method: "POST",
        headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            TargetUrl: targetUrl,
            OperationId: runId
        })
    });
    if (!res.ok) throw new Error(await res.text() || "Failed to start scan");
    const data = await res.json();
    const RunId = data.RunId ?? data.runId ?? runId;
    const ScanId = data.ScanId ?? data.scanId ?? null;
    return {
        RunId,
        ScanId
    };
}
async function getScan(id) {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Vulnerability/get-scan/${id}`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get scan');
    }
    return response.json();
}
async function getScans() {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Vulnerability/get-scans`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get scans');
    }
    return response.json();
}
async function getAllScans() {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Admin/get-all-scans`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get all scans');
    }
    return response.json();
}
}),
"[project]/src/realtime/scanHub.ts [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "ensureHubStarted": ()=>ensureHubStarted,
    "getScanHubConnection": ()=>getScanHubConnection
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnectionBuilder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$ILogger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/ILogger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/HubConnection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/token.ts [app-ssr] (ecmascript)");
;
;
const API_BASE = ("TURBOPACK compile-time value", "http://localhost:5000/api") || "http://localhost:7095/api";
const HUB_URL = API_BASE.replace(/\/api\/?/, '') + '/hubs/scanHub';
let connection = null;
function getScanHubConnection() {
    if (!connection) {
        connection = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnectionBuilder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HubConnectionBuilder"]().withUrl(HUB_URL, {
            accessTokenFactory: ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])() || ""
        }).withAutomaticReconnect().configureLogging(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$ILogger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LogLevel"].Information).build();
    }
    return connection;
}
async function ensureHubStarted() {
    const conn = getScanHubConnection();
    if (conn.state === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HubConnectionState"].Disconnected) {
        await conn.start();
    }
    return conn;
}
}),
"[project]/src/app/dashboard/start-scan/page.tsx [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "default": ()=>StartScanPage
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/scans.ts [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/realtime/scanHub.ts [app-ssr] (ecmascript)");
"use client";
;
;
;
;
function StartScanPage() {
    const [targetUrl, setTargetUrl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("");
    const [loading, setLoading] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [error, setError] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [runId, setRunId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [scanId, setScanId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [scanResult, setScanResult] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [stages, setStages] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])([]);
    const [status, setStatus] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("idle");
    const currentRunIdRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const fallbackTimerRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ensureHubStarted"])().catch((e)=>console.warn("Hub start error:", e));
    }, []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const conn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScanHubConnection"])();
        const onStage = (evt)=>{
            if (evt.runId !== currentRunIdRef.current) return;
            // setStages([evt])
            setStages((prev)=>[
                    ...prev,
                    evt
                ]);
            setStatus("running");
        };
        const onCompleted = async (evt)=>{
            if (evt.runId !== currentRunIdRef.current) return;
            clearTimeout(fallbackTimerRef.current);
            setStatus("completed");
            setLoading(false);
            const sid = evt.scanId ?? scanId;
            if (sid && !scanResult) {
                setScanId(sid);
                try {
                    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScan"])(sid);
                    setScanResult(data);
                } catch (e) {
                    setError(e?.message || "Failed to load scan result");
                }
            }
        };
        const onFailed = (evt)=>{
            if (evt.runId !== currentRunIdRef.current) return;
            clearTimeout(fallbackTimerRef.current);
            setStatus("failed");
            setError(evt.error || "Scan failed");
            setLoading(false);
        };
        conn.on("Stage", onStage);
        conn.on("Completed", onCompleted);
        conn.on("Failed", onFailed);
        conn.onreconnected(async ()=>{
            if (currentRunIdRef.current) {
                try {
                    await conn.invoke("JoinGroup", currentRunIdRef.current);
                } catch  {}
            }
        });
        return ()=>{
            conn.off("Stage", onStage);
            conn.off("Completed", onCompleted);
            conn.off("Failed", onFailed);
        };
    }, [
        scanId,
        scanResult
    ]);
    const onSubmit = async (e)=>{
        e.preventDefault();
        setError(null);
        setScanResult(null);
        setScanId(null);
        setStages([]);
        setStatus("idle");
        setRunId(null);
        currentRunIdRef.current = null;
        clearTimeout(fallbackTimerRef.current);
        const url = targetUrl.trim();
        if (!url) {
            setError("Please enter a target URL");
            return;
        }
        setLoading(true);
        try {
            const clientRunId = (globalThis.crypto?.randomUUID?.() ?? `${Date.now()}-${Math.random()}`).toString();
            setRunId(clientRunId);
            currentRunIdRef.current = clientRunId;
            const conn = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ensureHubStarted"])();
            await conn.invoke("JoinGroup", clientRunId);
            const { RunId, ScanId } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["startScan"])(url, clientRunId);
            if (ScanId) {
                setScanId(ScanId);
            }
            setStatus("running");
            if (ScanId) {
                fallbackTimerRef.current = setTimeout(async ()=>{
                    try {
                        const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScan"])(ScanId);
                        setScanResult(data);
                        setStatus("completed");
                        setLoading(false);
                    } catch  {}
                }, 3000);
            }
        } catch (err) {
            setError(err?.message || "Failed to start scan");
            setLoading(false);
        }
    };
    const safePrettyJson = (value)=>{
        if (value == null) return "";
        const raw = value.scanresult ?? value.Scanresult ?? value.result ?? value;
        if (typeof raw === "string") {
            try {
                return JSON.stringify(JSON.parse(raw), null, 2);
            } catch  {
                return String(raw);
            }
        }
        try {
            return JSON.stringify(raw, null, 2);
        } catch  {
            return String(raw);
        }
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("h1", {
                className: "text-xl font-semibold mb-4",
                children: "Start Scan"
            }, void 0, false, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 167,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("form", {
                className: "max-w-xl space-y-3",
                onSubmit: onSubmit,
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("input", {
                        type: "url",
                        placeholder: "Enter target URL (e.g. https://github.com/juice-shop/juice-shop)",
                        className: "w-full border rounded p-2",
                        value: targetUrl,
                        onChange: (e)=>setTargetUrl(e.target.value),
                        required: true
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 170,
                        columnNumber: 9
                    }, this),
                    error && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-red-600 text-sm whitespace-pre-wrap",
                        children: error
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 178,
                        columnNumber: 19
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                        className: "rounded px-4 py-2 border",
                        disabled: loading || !targetUrl,
                        children: loading ? "Downloading..." : "Start Scan"
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 179,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 169,
                columnNumber: 7
            }, this),
            runId && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "mt-6 p-3 border rounded w-full ",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("ul", {
                        className: "mt-3 space-y-2",
                        children: [
                            stages.map((s, idx)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                    className: "text-sm  p-2",
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            children: s.message
                                        }, void 0, false, {
                                            fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                            lineNumber: 192,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "text-xs text-gray-500",
                                            children: new Date(s.at).toLocaleString()
                                        }, void 0, false, {
                                            fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                            lineNumber: 193,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                            fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                            lineNumber: 196,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("hr", {
                                            className: "border-gray-500"
                                        }, void 0, false, {
                                            fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                            lineNumber: 197,
                                            columnNumber: 17
                                        }, this)
                                    ]
                                }, idx, true, {
                                    fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                    lineNumber: 190,
                                    columnNumber: 15
                                }, this)),
                            stages.length === 0 && status === "running" && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                className: "text-sm text-gray-500",
                                children: "Waiting for progress…"
                            }, void 0, false, {
                                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                lineNumber: 202,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 188,
                        columnNumber: 11
                    }, this),
                    status === "completed" && scanResult && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("pre", {
                        className: "text-xs bg-black text-gray-100 rounded p-3 whitespace-pre-wrap break-words [overflow-wrap:anywhere] max-w-full max-h-96 overflow-auto mt-3",
                        children: safePrettyJson(scanResult)
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 207,
                        columnNumber: 13
                    }, this),
                    status === "failed" && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-sm text-red-600 mt-2",
                        children: "Scan failed."
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 213,
                        columnNumber: 13
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 185,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
}
}),

};

//# sourceMappingURL=src_905c273d._.js.map