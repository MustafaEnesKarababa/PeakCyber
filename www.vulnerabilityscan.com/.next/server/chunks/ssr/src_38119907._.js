module.exports = {

"[project]/src/api/scans.ts [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "getAllScans": ()=>getAllScans,
    "getScan": ()=>getScan,
    "getScans": ()=>getScans,
    "startScan": ()=>startScan
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/token.ts [app-ssr] (ecmascript)");
const API_BASE = ("TURBOPACK compile-time value", "https://localhost:7095/api") || 'https://localhost:7095/api';
;
async function startScan(targetUrl) {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Vulnerability/start-scan`, {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            TargetUrl: targetUrl
        })
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to start scan');
    }
    return response.json();
}
async function getScan(id) {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Vulnerability/get-scan/${id}`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get scan');
    }
    return response.json();
}
async function getScans() {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Vulnerability/get-scans`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get scans');
    }
    return response.json();
}
async function getAllScans() {
    const token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!token) {
        throw new Error('Unauthorized');
    }
    const response = await fetch(`${API_BASE}/Admin/get-all-scans`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        throw new Error(await response.text() || 'Failed to get all scans');
    }
    return response.json();
}
}),
"[project]/src/realtime/scanHub.ts [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "createScanHubConnection": ()=>createScanHubConnection
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnectionBuilder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$ILogger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/ILogger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/token.ts [app-ssr] (ecmascript)");
;
;
const API_BASE = ("TURBOPACK compile-time value", "https://localhost:7095/api") || "http://localhost:7095/api";
const HUB_URL = API_BASE.replace(/\/api\/?/, '') + '/hubs/scanHub';
function createScanHubConnection() {
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnectionBuilder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HubConnectionBuilder"]().withUrl(HUB_URL, {
        accessTokenFactory: ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])() || ''
    }).withAutomaticReconnect().configureLogging(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$ILogger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LogLevel"].Information).build();
}
}),
"[project]/src/realtime/opId.ts [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

// src/realtime/opId.ts
// userId + ":" + targetUrl → SHA-256 → ilk 16 byte → .NET Guid formatı
__turbopack_context__.s({
    "makeOperationId": ()=>makeOperationId
});
async function makeOperationId(userId, targetUrl) {
    const payload = `${userId}:${targetUrl.trim()}`;
    const data = new TextEncoder().encode(payload);
    const hashBuf = await crypto.subtle.digest("SHA-256", data);
    const h = new Uint8Array(hashBuf).subarray(0, 16);
    const dv = new DataView(h.buffer, h.byteOffset, h.byteLength);
    const hex2 = (n)=>n.toString(16).padStart(2, "0");
    const part1 = dv.getUint32(0, true).toString(16).padStart(8, "0");
    const part2 = dv.getUint16(4, true).toString(16).padStart(4, "0");
    const part3 = dv.getUint16(6, true).toString(16).padStart(4, "0");
    const part4 = hex2(h[8]) + hex2(h[9]);
    const part5 = hex2(h[10]) + hex2(h[11]) + hex2(h[12]) + hex2(h[13]) + hex2(h[14]) + hex2(h[15]);
    return `${part1}-${part2}-${part3}-${part4}-${part5}`;
}
}),
"[project]/src/app/dashboard/start-scan/page.tsx [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s({
    "default": ()=>StartScanPage
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/scans.ts [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@microsoft/signalr/dist/esm/HubConnection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/realtime/scanHub.ts [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/api/token.ts [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$opId$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/realtime/opId.ts [app-ssr] (ecmascript)");
"use client";
;
;
;
;
;
;
;
// JWT'den userId (sub/nameidentifier) al
function getUserIdFromJwt() {
    const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$token$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getToken"])();
    if (!t) return null;
    try {
        const payload = JSON.parse(atob(t.split(".")[1]));
        return String(payload.sub || payload.nameid || payload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"] || "");
    } catch  {
        return null;
    }
}
function StartScanPage() {
    const [targetUrl, setTargetUrl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("");
    const [loading, setLoading] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [error, setError] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [scanId, setScanId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [scanResult, setScanResult] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const [logs, setLogs] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])([]);
    const addLog = (row)=>setLogs((p)=>[
                ...p,
                typeof row === "string" ? {
                    text: row
                } : row
            ]);
    const connectionRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const scanIdRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        scanIdRef.current = scanId;
    }, [
        scanId
    ]);
    // SignalR bağlan + eventleri UI'ye yaz
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const conn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$scanHub$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createScanHubConnection"])();
        conn.on("Stage", (p)=>{
            // p: { operationId, step, message, at }
            addLog({
                at: p?.at,
                text: p?.message ?? `Stage: ${p?.step ?? "-"}`
            });
        });
        conn.on("Completed", async (p)=>{
            // p: { operationId, scanId, message, at }
            addLog({
                at: p?.at,
                text: p?.message ?? "Completed."
            });
            const sid = Number(p?.scanId ?? scanIdRef.current);
            if (sid) {
                setScanId(sid);
                try {
                    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getScan"])(sid);
                    setScanResult(data);
                } catch (e) {
                    setError(e.message || "Failed to fetch scan result");
                }
            }
        });
        conn.on("Failed", (p)=>{
            // p: { operationId, error, at }
            addLog({
                at: p?.at,
                text: `Failed: ${p?.error || "Unknown error"}`
            });
            setError(p?.error || "Scan failed");
        });
        conn.start().then(()=>addLog(`Realtime connected (id=${conn.connectionId || "-"})`)).catch((e)=>addLog(`Realtime connect error: ${e?.message || e}`));
        connectionRef.current = conn;
        return ()=>{
            conn.off("Stage");
            conn.off("Completed");
            conn.off("Failed");
            conn.stop().catch(()=>{});
            connectionRef.current = null;
        };
    }, []);
    const onSubmit = async (e)=>{
        e.preventDefault();
        setError(null);
        setScanResult(null);
        setScanId(null);
        setLogs([]);
        if (!targetUrl.trim()) {
            setError("Please enter a target URL");
            return;
        }
        // 1) userId + targetUrl → operationId
        const userId = getUserIdFromJwt();
        if (!userId) {
            setError("Unauthorized");
            return;
        }
        let operationId;
        try {
            operationId = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$realtime$2f$opId$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeOperationId"])(userId, targetUrl);
            addLog(`operationId = ${operationId}`);
        } catch  {
            setError("Failed to create operation id");
            return;
        }
        // 2) gruba katıl
        const conn = connectionRef.current;
        if (!conn) {
            setError("Realtime connection not ready");
            return;
        }
        if (conn.state !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$microsoft$2f$signalr$2f$dist$2f$esm$2f$HubConnection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HubConnectionState"].Connected) {
            try {
                await conn.start();
            } catch (err) {
                setError(err?.message || "Realtime connection failed");
                return;
            }
        }
        try {
            await conn.invoke("JoinGroup", operationId);
            addLog("Joined realtime group.");
        } catch (err) {
            setError(err?.message || "Failed to join realtime group");
            return;
        }
        // 3) start-scan (Completed event gelince sonucu çekeceğiz)
        setLoading(true);
        try {
            const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$api$2f$scans$2e$ts__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["startScan"])(targetUrl.trim());
            // Backend sync bir ScanId dönerse göstermek faydalı:
            const sid = Number(result?.scanId ?? result?.ScanId);
            if (sid) {
                setScanId(sid);
                addLog(`Start accepted. scanId=${sid}`);
            } else {
                addLog("Start accepted.");
            }
        } catch (err) {
            setError(err?.message || "Failed to start scan");
            addLog(`Start error: ${err?.message || err}`);
        } finally{
            setLoading(false);
        }
    };
    const renderLogs = ()=>{
        if (logs.length === 0) return null;
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "mt-6",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "font-medium mb-1",
                    children: "Live Logs"
                }, void 0, false, {
                    fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                    lineNumber: 164,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("pre", {
                    className: "   text-xs bg-gray-900 text-gray-100 rounded p-3   whitespace-pre-wrap break-words [overflow-wrap:anywhere]   max-w-full max-h-60 overflow-auto   ",
                    children: logs.map((l)=>l.at ? `[${new Date(l.at).toLocaleTimeString()}] ${l.text}` : l.text).join("\n")
                }, void 0, false, {
                    fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                    lineNumber: 165,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
            lineNumber: 163,
            columnNumber: 7
        }, this);
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("h1", {
                className: "text-xl font-semibold mb-4",
                children: "Start Scan"
            }, void 0, false, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 182,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("form", {
                className: "max-w-xl space-y-3",
                onSubmit: onSubmit,
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("input", {
                        type: "url",
                        placeholder: "Enter target URL",
                        className: "w-full border rounded p-2",
                        value: targetUrl,
                        onChange: (e)=>setTargetUrl(e.target.value),
                        required: true
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 185,
                        columnNumber: 9
                    }, this),
                    error && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-red-600 text-sm whitespace-pre-wrap",
                        children: error
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 193,
                        columnNumber: 19
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                        className: "rounded px-4 py-2 border",
                        disabled: loading || !targetUrl,
                        children: loading ? "Starting..." : "Start Scan"
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 195,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 184,
                columnNumber: 7
            }, this),
            renderLogs(),
            scanId !== null && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "mt-6 p-3 border rounded w-full ",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "font-medium",
                        children: [
                            "Scan ID: ",
                            scanId
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 204,
                        columnNumber: 11
                    }, this),
                    scanResult ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("pre", {
                        className: "   text-xs text-gray-100 rounded p-3   whitespace-pre-wrap break-words [overflow-wrap:anywhere]   max-w-full max-h-96 overflow-auto",
                        children: [
                            "Target URL : ",
                            scanResult.targetUrl,
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                lineNumber: 213,
                                columnNumber: 15
                            }, this),
                            "Scan Date : ",
                            new Date(scanResult.scanDate).toLocaleString(),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                lineNumber: 215,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                lineNumber: 216,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                                lineNumber: 217,
                                columnNumber: 15
                            }, this),
                            "Scan Result :",
                            " ",
                            (()=>{
                                try {
                                    const raw = scanResult.scanResult ?? scanResult.scanresult ?? scanResult.Scanresult;
                                    const val = typeof raw === "string" ? JSON.parse(raw) : raw;
                                    return JSON.stringify(val, null, 2);
                                } catch  {
                                    return String(scanResult.scanResult ?? scanResult.scanresult ?? scanResult.Scanresult ?? "");
                                }
                            })()
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 206,
                        columnNumber: 13
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-sm opacity-80 mt-2",
                        children: "No scan results available."
                    }, void 0, false, {
                        fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                        lineNumber: 238,
                        columnNumber: 13
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/app/dashboard/start-scan/page.tsx",
                lineNumber: 203,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
}
}),

};

//# sourceMappingURL=src_38119907._.js.map