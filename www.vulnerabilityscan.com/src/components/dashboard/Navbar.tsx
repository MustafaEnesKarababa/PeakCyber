"use client";

import { useState, useEffect, useRef, use } from "react";

type Props = {
  username: string;
  role: string;
  onLogout: () => void;
};

export default function Navbar({ username, role, onLogout }: Props) {
  const [isOpen, setIsOpen] = useState(false);
  const boxRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const onDocumentClick = (e: MouseEvent) => {
      if (boxRef.current && !boxRef.current.contains(e.target as Node)) {
        setIsOpen(false);
      }
    };
    document.addEventListener("click", onDocumentClick);
    return () => document.removeEventListener("click", onDocumentClick);
  }, []);

  return (
    <header className="h-14 border-b flex items-center justify-between px-4">
      <div className="font-semibold tracking-wide">Vulnerability Scan</div>
      <div className="flex items-center gap-4 relative" ref={boxRef}>
        <div className="text-sm text-right leading-tight">
          <div className="font-medium">{username}</div>
          <div className="opacity-70">{role}</div>
        </div>
        <button
          onClick={() => setIsOpen((v) => !v)}
          className="border rounded px-3 py-1 text-sm hover:bg-gray-50 hover:text-black"
          aria-expanded={isOpen}
          aria-haspopup="menu"
        >
          Account
        </button>
      </div>

      {isOpen && (
        <div
          className="absolute right-0 top-10 w-44 border rounded bg-gray-50 text-black shadow-md overflow-hidden"
          role="menu"
        >
          <a
            className="block px-3 py-2 hover:bg-gray-100 text-sm"
            href="/account"
          >
            Account Settings
          </a>
          <button
            className="block w-full text-left px-3 py-2 hover:bg-gray-100 text-sm"
            onClick={onLogout}
          >
            Logout
          </button>
        </div>
      )}
    </header>
  );
}
