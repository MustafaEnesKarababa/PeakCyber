'use client';
import { useState, useEffect } from 'react';
import Navbar from '@/components/dashboard/Navbar';
import SideBar from '@/components/dashboard/Sidebar';
import { useRouter } from 'next/navigation';
import { getProfile } from '@/api/profile';
import { removeToken } from '@/api/token';


export default function DashboardLayout({children} : {children : React.ReactNode}){

  const router = useRouter();
  const [profile, setProfile] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    let mounted = true;
    (async () => {
      try {
        const p = await getProfile();
        if (mounted) setProfile(p);
      } 
      catch {
        removeToken();
        router.replace('/login'); 
      } 
      finally {
        if (mounted) setLoading(false);
      }
    })();

    return () => { mounted = false; };
    
  }, [router]);

  if (loading || !profile) {
    return (
      <main className="min-h-screen grid place-items-center p-6">
        <h1 className="text-2xl font-semibold">Loading...</h1>
      </main>
    );
  }

  return (
    <div className='min-h-screen flex flex-col '>
      <Navbar
        username = {profile.username}
        role = {profile.role}  
        onLogout={() => {
          removeToken();
          router.push('/login');
        }}
      />
      <div className='flex flex-1'>
        <SideBar
           role = {profile.role} 
          />
        <main className='flex-1 p-6 min-w-0'>
          {children}
        </main>  
      </div>
          
      
    
    </div>


  )

}