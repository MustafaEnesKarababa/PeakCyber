const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL || 'https://localhost:7095/api';
import {getToken} from './token'

type StartScanApiResponse = {
  RunId?: string; runId?: string;
  ScanId?: number; scanId?: number;
};

export async function startScan(targetUrl: string, runId: string) {
  const token = getToken()

  if (!token) 
    {
      throw new Error("Unauthorized")
    }

  const res = await fetch(`${API_BASE}/Vulnerability/start-scan`, {
    method: "POST",
    headers: {
      Authorization: `Bearer ${token}`,
      "Content-Type": "application/json",
    },
   
    body: JSON.stringify({ TargetUrl: targetUrl, OperationId: runId }),
  });

  if (!res.ok) 
    throw new Error((await res.text()) || "Failed to start scan")

  const data: StartScanApiResponse = await res.json()

  const RunId = data.RunId ?? data.runId ?? runId

  const ScanId = data.ScanId ?? data.scanId ?? null

  return { RunId, ScanId }
}



export async function getScan (id : number){
  const token = getToken();
  if(!token){
    throw new Error('Unauthorized');
  }

  const response = await fetch(`${API_BASE}/Vulnerability/get-scan/${id}`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    }
  });

  if (!response.ok) {
    throw new Error(await response.text() || 'Failed to get scan');
  }

  return response.json();

}

export async function getScans() {
  const token = getToken();
  if(!token){
    throw new Error('Unauthorized');
  }

  const response = await fetch(`${API_BASE}/Vulnerability/get-scans`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    }
  });

  if (!response.ok) {
    throw new Error(await response.text() || 'Failed to get scans');
  }

  return response.json();
}

export async function getAllScans(){
  const token = getToken();
  if(!token){
    throw new Error('Unauthorized');
  }

  const response = await fetch(`${API_BASE}/Admin/get-all-scans`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json',
      
    }
  });

  if (!response.ok) {
    throw new Error(await response.text() || 'Failed to get all scans');
  }

  return response.json();
}


  
