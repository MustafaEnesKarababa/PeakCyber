const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL 

import {getToken } from "./token"

export async function getUsers() {
  const token =  getToken();
  if (!token) {
    throw new Error("Unauthorized");
  }

  const response = await fetch(`${API_BASE}/Admin/get-users`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const err = await response.text();
    throw new Error(err || "Failed to fetch users");
  }

  return response.json();
}

export async function getUser(userId : number) {
  const token =  getToken();
  if (!token) {
    throw new Error("Unauthorized");
  }

  const response = await fetch(`${API_BASE}/Admin/get-user/${userId}`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const err = await response.text();
    throw new Error(err || "Failed to fetch user");
  }

  return response.json();
}

export async function updateUser( payload : {
  id : number,
  userName?: string,
  email?: string,
  role?: string,
  password?: string
}) 
{
  const token =  getToken();
  if (!token) {
    throw new Error("Unauthorized");
  }

  const response = await fetch(`${API_BASE}/Admin/update-user`, {
    method: "PUT",
    headers: {
      Authorization: `Bearer ${token}`,
      "Content-Type": "application/json",
    },
    body: JSON.stringify(payload),
  });

  if (!response.ok) {
    const err = await response.text();
    throw new Error(err || "Failed to update user");
  }

  return response.json();
}

export async function deleteUser(userId: number) {
  const token =  getToken();
  if (!token) {
    throw new Error("Unauthorized");
  }

  const response = await fetch(`${API_BASE}/Admin/delete-user/${userId}`, {
    method: "DELETE",
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const err = await response.text();
    throw new Error(err || "Failed to delete user");
  }

  return response.json();
}
